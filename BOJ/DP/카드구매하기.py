# https://www.acmicpc.net/problem/11052
"""
문제
카드 팩의 가격이 주어졌을 때, N개의 카드를 구매하기 위해 민규가 지불해야 하는 금액의 최댓값을 구하는 프로그램을 작성하시오.
예를 들어, 카드팩이 총 4가지 종류가 있고, P1 = 1, P2 = 5, P3 = 6, P4 = 7인 경우에 민규가 카드 4개를 갖기 위해 지불해야 하는 금액의 최댓값은 10원이다. 2개 들어있는 카드팩을 2번 사면 된다.

입력
첫째 줄에 민규가 구매하려고 하는 카드의 개수 N이 주어진다. (1 ≤ N ≤ 1,000)
둘째 줄에는 Pi가 P1부터 PN까지 순서대로 주어진다. (1 ≤ Pi ≤ 10,000)

출력
첫째 줄에 민규가 카드 N개를 갖기 위해 지불해야 하는 금액의 최댓값을 출력한다.
"""
n = int(input())
# 인덱스 번호를 맞추기 위해 1번 인덱스 부터 시작
dp = [0] * (n + 1)
price = [0] + list(map(int, input().split()))
# 1개 구매할 때는 1개의 값이 최대값이다.
# dp[n] = 카드 n개의 최대 금액
dp[1] = price[1]
for i in range(2, n + 1):
    for j in range(1, i + 1):
        # dp[n]과 price[m]에서 m은 i와 같거나 작아야 하고, n+m은 i개가 되어야 한다.
        if dp[i] < dp[i - j] + price[j]:
            dp[i] = dp[i - j] + price[j]
print(dp[n])
