# https://www.acmicpc.net/problem/2011
"""
문제
어떤 암호가 주어졌을 때, 그 암호의 해석이 몇 가지가 나올 수 있는지 구하는 프로그램을 작성하시오.
상근: 그냥 간단히 암호화 하자. A를 1이라고 하고, B는 2로, 그리고 Z는 26으로 하는거야.
선영: 그럼 안돼. 만약, "BEAN"을 암호화하면 25114가 나오는데, 이걸 다시 글자로 바꾸는 방법은 여러 가지가 있어.
상근: 그렇네. 25114를 다시 영어로 바꾸면, "BEAAD", "YAAD", "YAN", "YKD", "BEKD", "BEAN" 총 6가지가 나오는데, BEAN이 맞는 단어라는건 쉽게 알수 있잖아?

입력
첫째 줄에 5000자리 이하의 암호가 주어진다. 암호는 숫자로 이루어져 있다.

출력
나올 수 있는 해석의 가짓수를 구하시오. 정답이 매우 클 수 있으므로, 1000000으로 나눈 나머지를 출력한다.
암호가 잘못되어 암호를 해석할 수 없는 경우에는 0을 출력한다.
"""

password = '_' + input()

# 0이라면 해독 불가능
if password[1] == '0':
    print(0)
    exit(0)

dp = [0 for _ in range(5001)]
# 첫 자리수까지는 경우의 수가 1개이다.
dp[0] = 1
dp[1] = 1

"""
dp[n] = dp[n-1] + dp[n-2] (2개로 나눌 수 있는 경우) ex. 12, 1/1
dp[n] = dp[n-1] (1개로 나눌 수 있는 경우) ex. 한자리 수
dp[n] = dp[n-2] (끝이 10 또는 20인 경우)
불능: 10,20이 아닌 10의 배수인 경우
"""
for i in range(2, len(password)):
    # n-1번째 자리수와 n번째 자리수를 합한 숫자가 10~26사이면 2개로 나눠서 해석
    if int(password[i-1:i+1]) in range(10, 27):
        # 끝자리가 0이면 1,0 2,0으로 나눌 수 없고 10,20으로 처리해야 함
        if int(password[i-1:i+1]) in [10, 20]:
            dp[i] = dp[i-2] % 1000000
        else:
            dp[i] = dp[i-1] + dp[i-2] % 1000000

    else:
        # 10,20을 제외한 10의 배수면 해독 불가(범위 초과)
        if int(password[i-1:i+1]) % 10 == 0:
            print(0)
            exit(0)
        else:
            dp[i] = dp[i-1] % 1000000

print(dp[len(password)-1] % 1000000)
